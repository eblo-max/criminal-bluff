/**
 * ResultScreen Component
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
 */
class ResultScreen {
  constructor(telegramService) {
    this.telegramService = telegramService;
    this.container = document.getElementById('game-result-screen');
    this.scoreElement = this.container.querySelector('.final-score');
    this.correctAnswersElement = this.container.querySelector('.correct-answers');
    this.streakElement = this.container.querySelector('.best-streak');
    this.achievementsContainer = this.container.querySelector('.achievements-container');
    this.playAgainBtn = this.container.querySelector('#play-again-btn');
    this.shareResultBtn = this.container.querySelector('#share-result-btn');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   * @param {Object} results - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã
   */
  init(results) {
    this.renderResults(results);
    this.bindEvents(results);
  }

  /**
   * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
   * @param {Object} results - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã
   */
  renderResults(results) {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    this.scoreElement.textContent = results.totalScore;
    this.correctAnswersElement.textContent = results.correctAnswers;
    this.streakElement.textContent = results.bestStreak;

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (results.newAchievements && results.newAchievements.length > 0) {
      this.renderAchievements(results.newAchievements);
    } else {
      this.achievementsContainer.style.display = 'none';
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —á–∏—Å–ª–∞ –æ—á–∫–æ–≤
    this.animateScore(results.totalScore);
  }

  /**
   * –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞
   * @param {Number} targetScore - –¶–µ–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç–∞
   */
  animateScore(targetScore) {
    const duration = 1000; // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –º—Å
    const start = 0;
    const startTime = performance.now();

    const animateScoreStep = (currentTime) => {
      const elapsedTime = currentTime - startTime;
      const progress = Math.min(elapsedTime / duration, 1);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–ª–∏–Ω–µ–π–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±–æ–ª–µ–µ –¥–∏–Ω–∞–º–∏—á–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
      const easedProgress = this.easeOutQuart(progress);
      const currentValue = Math.floor(start + easedProgress * (targetScore - start));
      
      this.scoreElement.textContent = currentValue;
      
      if (progress < 1) {
        requestAnimationFrame(animateScoreStep);
      } else {
        this.scoreElement.textContent = targetScore;
      }
    };

    requestAnimationFrame(animateScoreStep);
  }

  /**
   * –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
   * @param {Number} x - –ü—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ (0-1)
   * @returns {Number} - –ü–ª–∞–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
   */
  easeOutQuart(x) {
    return 1 - Math.pow(1 - x, 4);
  }

  /**
   * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
   * @param {Array} achievements - –ú–∞—Å—Å–∏–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
   */
  renderAchievements(achievements) {
    this.achievementsContainer.style.display = 'block';
    const achievementsList = this.achievementsContainer.querySelector('.achievements-list');
    achievementsList.innerHTML = '';

    achievements.forEach(achievement => {
      const achievementItem = document.createElement('div');
      achievementItem.className = 'achievement-item new-achievement';
      
      achievementItem.innerHTML = `
        <div class="achievement-icon">${this.getAchievementIcon(achievement.name)}</div>
        <div class="achievement-name">${achievement.name}</div>
        <div class="achievement-description">${achievement.description}</div>
      `;
      
      achievementsList.appendChild(achievementItem);
    });
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
   * @param {String} achievementName - –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
   * @returns {String} - –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–∫–æ–Ω–∫–∏
   */
  getAchievementIcon(achievementName) {
    const icons = {
      '–ù–æ–≤–∏—á–æ–∫': 'üéÆ',
      '–≠–∫—Å–ø–µ—Ä—Ç': 'üß†',
      '–ú–∞—Å—Ç–µ—Ä –¥–µ–¥—É–∫—Ü–∏–∏': 'üîç',
      '–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –¥–µ—Ç–µ–∫—Ç–∏–≤': '‚ö°',
      '–°–µ—Ä–∏–π–Ω—ã–π –∏–≥—Ä–æ–∫': 'üèÜ'
    };

    return icons[achievementName] || 'üéØ';
  }

  /**
   * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
   * @param {Object} results - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
   */
  bindEvents(results) {
    // –°–æ–±—ã—Ç–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
    this.playAgainBtn.addEventListener('click', () => {
      // –°–æ–±—ã—Ç–∏–µ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –≤—ã—à–µ
    });

    // –°–æ–±—ã—Ç–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"
    this.shareResultBtn.addEventListener('click', () => {
      this.telegramService.shareResults(results);
    });
  }
}

export default ResultScreen; 