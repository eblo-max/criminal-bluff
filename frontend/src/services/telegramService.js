/**
 * Telegram Service
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API Telegram Mini Apps
 */
export class TelegramService {
  constructor() {
    // Telegram WebApp –æ–±—ä–µ–∫—Ç
    this.tg = window.Telegram?.WebApp;
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    this.user = null;
    
    // URL API –±–µ–∫–µ–Ω–¥–∞
    this.apiBaseUrl = process.env.REACT_APP_API_URL || '';
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    this.initData = this.tg?.initData || '';
    
    // JWT —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    this.authToken = localStorage.getItem('auth_token') || null;
  }
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
   */
  async init() {
    if (!this.tg) {
      console.warn('Telegram WebApp is not available');
      return false;
    }
    
    // –†–∞—Å—à–∏—Ä—è–µ–º –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É
    this.tg.expand();
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (this.tg.initDataUnsafe && this.tg.initDataUnsafe.user) {
      this.user = this.tg.initDataUnsafe.user;
    }
    
    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ –≤ —Ö–µ–¥–µ—Ä–µ Telegram
    this.setupBackButton();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–º—ã
    this.setupTheme();
    
    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (process.env.NODE_ENV !== 'production') {
      console.log('Telegram WebApp initialized:', {
        version: this.tg.version,
        platform: this.tg.platform,
        themeParams: this.tg.themeParams,
        initData: this.tg.initData ? 'available' : 'not available'
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if (this.initData) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –≤ localStorage
        if (this.authToken) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∞–ª–∏–¥–µ–Ω –ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω
          const isValid = await this.validateToken(this.authToken);
          if (isValid) {
            return true;
          }
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –æ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–µ–º—Å—è –∑–∞–Ω–æ–≤–æ
        const authResult = await this.authenticate();
        return authResult;
      } catch (error) {
        console.error('Error during authentication:', error);
        return false;
      }
    }
    
    return true;
  }
  
  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ Telegram
   */
  setupBackButton() {
    if (!this.tg) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
    const screens = document.querySelectorAll('.screen');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –æ—Ç Telegram
    this.tg.onEvent('backButtonClicked', () => {
      // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
      const activeScreen = document.querySelector('.screen.active');
      
      // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω, –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      if (activeScreen.id === 'start-screen') {
        this.tg.close();
      } 
      // –ï—Å–ª–∏ —ç—Ç–æ —ç–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π
      else if (activeScreen.id === 'game-result-screen') {
        document.getElementById('start-screen').classList.add('active');
        activeScreen.classList.remove('active');
      }
      // –ï—Å–ª–∏ —ç—Ç–æ –∏–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω, —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –≤—ã—Ö–æ–¥–µ
      else if (activeScreen.id === 'game-screen') {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏? –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–≥—Ä—ã –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.')) {
          document.getElementById('start-screen').classList.add('active');
          activeScreen.classList.remove('active');
        }
      }
      // –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
      else {
        document.getElementById('start-screen').classList.add('active');
        activeScreen.classList.remove('active');
      }
    });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤–∏–¥–∏–º–æ—Å—Ç—å—é —ç–∫—Ä–∞–Ω–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥
    const observer = new MutationObserver((mutations) => {
      for (const mutation of mutations) {
        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
          const target = mutation.target;
          
          // –ï—Å–ª–∏ —ç–∫—Ä–∞–Ω —Å—Ç–∞–ª –∞–∫—Ç–∏–≤–Ω—ã–º
          if (target.classList.contains('active')) {
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º —ç–∫—Ä–∞–Ω–µ
            if (target.id === 'start-screen') {
              this.tg.BackButton.hide();
            } else {
              this.tg.BackButton.show();
            }
          }
        }
      }
    });
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–æ–≤
    for (const screen of screens) {
      observer.observe(screen, { attributes: true });
    }
  }
  
  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –∏–∑ Telegram
   */
  setupTheme() {
    if (!this.tg || !this.tg.themeParams) return;
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º UI —Å–µ—Ä–≤–∏—Å
    import('./uiService.js').then(module => {
      const uiService = new module.UiService();
      uiService.applyTheme(this.tg.themeParams);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
    this.tg.onEvent('themeChanged', () => {
      import('./uiService.js').then(module => {
        const uiService = new module.UiService();
        uiService.applyTheme(this.tg.themeParams);
      });
    });
  }
  
  /**
   * –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram WebApp
   * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  async authenticate() {
    try {
      if (!this.initData) {
        console.error('No initData available for authentication');
        return false;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
      const response = await fetch(`${this.apiBaseUrl}/api/webapp/auth`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ initData: this.initData })
      });
      
      if (!response.ok) {
        const error = await response.json();
        console.error('Authentication error:', error);
        return false;
      }
      
      const result = await response.json();
      
      if (result.success && result.token) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
        this.authToken = result.token;
        localStorage.setItem('auth_token', result.token);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if (result.user) {
          localStorage.setItem('user_data', JSON.stringify(result.user));
        }
        
        return true;
      }
      
      return false;
    } catch (error) {
      console.error('Authentication error:', error);
      return false;
    }
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞
   * @param {string} token - JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  async validateToken(token) {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
      const response = await fetch(`${this.apiBaseUrl}/api/user/profile`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      return response.ok;
    } catch (error) {
      console.error('Token validation error:', error);
      return false;
    }
  }
  
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
   * @returns {Object} - –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
   */
  getAuthHeaders() {
    const headers = {
      'Content-Type': 'application/json'
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (this.authToken) {
      headers['Authorization'] = `Bearer ${this.authToken}`;
    } 
    // –ò–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç Telegram
    else if (this.initData) {
      headers['Telegram-Data'] = this.initData;
    }
    
    return headers;
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   * @returns {Object|null} - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   */
  getUserInfo() {
    return this.user;
  }
  
  /**
   * –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤ Telegram
   * @param {Object} results - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã
   */
  shareResults(results) {
    if (!this.tg) return;
    
    const text = `üéÆ –Ø —Å—ã–≥—Ä–∞–ª –≤ "–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –ë–ª–µ—Ñ"!\n\n` +
      `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${results.correctAnswers}/5\n` +
      `üî• –õ—É—á—à–∞—è —Å–µ—Ä–∏—è: ${results.bestStreak}\n` +
      `üíØ –ù–∞–±—Ä–∞–Ω–æ –æ—á–∫–æ–≤: ${results.totalScore}\n\n` +
      `–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏!`;
    
    this.tg.showPopup({
      title: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏',
      message: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏–≥—Ä—ã —Å –¥—Ä—É–∑—å—è–º–∏?',
      buttons: [
        { id: 'share', type: 'default', text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è' },
        { id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞' }
      ]
    }, (buttonId) => {
      if (buttonId === 'share') {
        this.tg.sendData(JSON.stringify({
          action: 'share_results',
          text: text
        }));
      }
    });
  }
  
  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  close() {
    if (this.tg) {
      this.tg.close();
    }
  }
  
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ
   * @param {string} title - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
   * @param {string} message - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∫–Ω–∞
   * @param {Array} buttons - –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
   * @param {Function} callback - —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
   */
  showPopup(title, message, buttons, callback) {
    if (!this.tg) return;
    
    this.tg.showPopup({
      title,
      message,
      buttons
    }, callback);
  }
  
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   * @param {string} message - —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  showAlert(message) {
    if (!this.tg) return;
    
    this.tg.showAlert(message);
  }
  
  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
   * @param {string} text - —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
   * @param {Function} callback - —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
   * @param {boolean} isVisible - –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
   * @param {boolean} isActive - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
   */
  setupMainButton(text, callback, isVisible = true, isActive = true) {
    if (!this.tg || !this.tg.MainButton) return;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ —Ü–≤–µ—Ç–æ–≤
    this.tg.MainButton.text = text;
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    this.tg.MainButton.onClick(callback);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if (isVisible) {
      this.tg.MainButton.show();
    } else {
      this.tg.MainButton.hide();
    }
    
    if (isActive) {
      this.tg.MainButton.enable();
    } else {
      this.tg.MainButton.disable();
    }
  }
  
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é WebApp —Å —Å–µ—Ä–≤–µ—Ä–∞
   * @returns {Promise<Object|null>} - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WebApp
   */
  async getWebAppConfig() {
    try {
      const response = await fetch(`${this.apiBaseUrl}/api/webapp/config`, {
        headers: this.getAuthHeaders()
      });
      
      if (!response.ok) {
        throw new Error('Failed to get WebApp config');
      }
      
      const data = await response.json();
      return data.config;
    } catch (error) {
      console.error('Error getting WebApp config:', error);
      return null;
    }
  }
} 